{"ast":null,"code":"var _jsxFileName = \"/home/pradeep/Documents/udemyAngular/ReactBatch/dummy/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [name, setName] = useState('Pradeep');\n\n  // Variation 1 -> Every Render\n  // useEffect(() => {\n  //   console.log(\"Ui Rendering Done\")\n  // })\n\n  // Variation 2 --> First Render\n  // useEffect( () => {\n  //   console.log(\"UI RENDERING MODE\");\n  // },[])\n\n  // Variation 3 -->on First Render + whenever dependency changes\n  // useEffect( () => {\n  //   console.log(\"CHnage Observed\");\n  // },[name])\n\n  // Variation 4 -->on handle unmounting of a component\n  useEffect(() => {\n    // add event Listener\n    console.log(\"listener added\");\n    return () => {\n      console.log(\"Listener Removed\");\n    };\n  }, []);\n  function changeHandler(event) {\n    console.log(text);\n    setText(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G3/8Ykm0id01XeKwAbcu2zgRlVg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","jsxDEV","_jsxDEV","App","_s","text","setText","name","setName","console","log","changeHandler","event","target","value","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pradeep/Documents/udemyAngular/ReactBatch/dummy/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [name, setName] = useState('Pradeep');\n\n  // Variation 1 -> Every Render\n  // useEffect(() => {\n  //   console.log(\"Ui Rendering Done\")\n  // })\n\n  // Variation 2 --> First Render\n  // useEffect( () => {\n  //   console.log(\"UI RENDERING MODE\");\n  // },[])\n\n  // Variation 3 -->on First Render + whenever dependency changes\n  // useEffect( () => {\n  //   console.log(\"CHnage Observed\");\n  // },[name])\n\n  // Variation 4 -->on handle unmounting of a component\n  useEffect(() => {\n    // add event Listener\n    console.log(\"listener added\");\n\n    return () => {\n      console.log(\"Listener Removed\");\n    }\n  }, [])\n\n  function changeHandler(event) {\n    console.log(text)\n    setText(event.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <input type=\"text\" onChange={changeHandler}></input>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;;EAE3C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACAD,SAAS,CAAC,MAAM;IACd;IACAU,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAE7B,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC5BH,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjBC,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAAClB,EAAA,CAvCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}